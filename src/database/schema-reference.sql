-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.VC Usage (
  id integer NOT NULL,
  user_name character varying,
  session_id character varying NOT NULL,
  user_input text NOT NULL,
  ai_response text NOT NULL,
  interaction_number integer NOT NULL,
  scenario_name character varying DEFAULT 'TradeSphere_AI_Agent'::character varying,
  total_tokens integer,
  created_at timestamp with time zone DEFAULT now(),
  message_type character varying DEFAULT 'chat'::character varying,
  success boolean DEFAULT true,
  error_message text,
  interaction_summary text,
  customer_name character varying,
  customer_address text,
  customer_email character varying,
  customer_phone character varying,
  processing_time_ms numeric,
  ai_model character varying,
  prompt_tokens integer,
  completion_tokens integer,
  response_length integer,
  services_count integer,
  confidence_score numeric,
  gpt_splitting_time_ms numeric,
  parameter_collection_time_ms numeric,
  pricing_calculation_time_ms numeric,
  ai_generation_time_ms numeric,
  last_viewed_at timestamp with time zone,
  view_count integer DEFAULT 0,
  updated_at timestamp with time zone DEFAULT now(),
  company_id uuid,
  user_id uuid,
  customer_id uuid,
  customer_linked_at timestamp with time zone,
  customer_link_source character varying,
  CONSTRAINT VC Usage_pkey PRIMARY KEY (id),
  CONSTRAINT vc_usage_company_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT VC Usage_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT fk_vc_usage_user FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.beta_codes (
  id integer NOT NULL DEFAULT nextval('beta_codes_id_seq'::regclass),
  code character varying NOT NULL UNIQUE,
  used boolean DEFAULT false,
  used_by_email character varying,
  used_by_user_id text,
  used_at timestamp without time zone,
  created_at timestamp without time zone DEFAULT now(),
  expires_at timestamp without time zone DEFAULT (now() + '30 days'::interval),
  CONSTRAINT beta_codes_pkey PRIMARY KEY (id)
);
CREATE TABLE public.beta_users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  email character varying UNIQUE,
  full_name character varying,
  job_title character varying,
  tech_uuid character varying NOT NULL UNIQUE,
  beta_code_used character varying,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  first_name character varying,
  beta_code_id integer,
  is_admin boolean DEFAULT false,
  user_icon character varying NOT NULL DEFAULT 'User'::character varying,
  company_id uuid,
  CONSTRAINT beta_users_pkey PRIMARY KEY (id),
  CONSTRAINT beta_users_company_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT fk_beta_code FOREIGN KEY (beta_code_used) REFERENCES public.beta_codes(code)
);
CREATE TABLE public.companies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id character varying NOT NULL DEFAULT generate_company_id() UNIQUE,
  name character varying NOT NULL,
  email character varying NOT NULL,
  website_url text,
  ai_personality character varying,
  color_theme jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  subscription_status character varying DEFAULT 'trial'::character varying CHECK (subscription_status::text = ANY (ARRAY['trial'::character varying, 'active'::character varying, 'past_due'::character varying, 'suspended'::character varying, 'cancelled'::character varying]::text[])),
  next_billing_date date,
  trial_end_date date DEFAULT (CURRENT_DATE + '14 days'::interval),
  dwolla_customer_url character varying,
  monthly_amount numeric DEFAULT 2000.00,
  dwolla_funding_source_id text,
  payment_method_status text DEFAULT 'pending'::text CHECK (payment_method_status = ANY (ARRAY['pending'::text, 'verified'::text, 'failed'::text, 'suspended'::text])),
  payment_method_verified_at timestamp with time zone,
  billing_email text,
  billing_name text,
  subscription_tier text DEFAULT 'standard'::text CHECK (subscription_tier = ANY (ARRAY['trial'::text, 'standard'::text, 'pro'::text, 'enterprise'::text])),
  subscription_started_at timestamp with time zone,
  billing_cycle_day integer DEFAULT 1 CHECK (billing_cycle_day >= 1 AND billing_cycle_day <= 28),
  last_payment_failed_at timestamp with time zone,
  payment_failure_count integer DEFAULT 0,
  cancelled_at timestamp with time zone,
  cancellation_reason text,
  CONSTRAINT companies_pkey PRIMARY KEY (id)
);
CREATE TABLE public.company_notes (
  id bigint NOT NULL,
  notes_content text DEFAULT ''::text,
  updated_by text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT company_notes_pkey PRIMARY KEY (id)
);
CREATE TABLE public.customer_audit_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  table_name character varying NOT NULL,
  record_id uuid NOT NULL,
  company_id uuid NOT NULL,
  action character varying NOT NULL CHECK (action::text = ANY (ARRAY['INSERT'::character varying, 'UPDATE'::character varying, 'DELETE'::character varying]::text[])),
  old_values jsonb,
  new_values jsonb,
  changed_by_user_id uuid,
  changed_at timestamp with time zone DEFAULT now(),
  ip_address inet,
  user_agent text,
  CONSTRAINT customer_audit_log_pkey PRIMARY KEY (id)
);
CREATE TABLE public.customer_conversation_summaries (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  customer_id uuid NOT NULL,
  session_id text NOT NULL,
  summary text,
  extracted_topics jsonb DEFAULT '[]'::jsonb,
  conversation_date timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customer_conversation_summaries_pkey PRIMARY KEY (id),
  CONSTRAINT customer_conversation_summaries_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.customer_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  customer_id uuid NOT NULL,
  company_id uuid NOT NULL,
  event_type character varying NOT NULL CHECK (event_type::text = ANY (ARRAY['created'::character varying, 'updated'::character varying, 'merged'::character varying, 'deleted'::character varying, 'stage_changed'::character varying, 'tag_added'::character varying, 'tag_removed'::character varying, 'note_added'::character varying]::text[])),
  event_data jsonb,
  created_by_user_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customer_events_pkey PRIMARY KEY (id),
  CONSTRAINT customer_events_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT customer_events_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT customer_events_created_by_user_id_fkey FOREIGN KEY (created_by_user_id) REFERENCES public.users(id)
);
CREATE TABLE public.customer_interactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  customer_name text NOT NULL,
  session_id text,
  interaction_type text NOT NULL CHECK (interaction_type = ANY (ARRAY['view'::text, 'edit'::text, 'load'::text])),
  viewed_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  company_id uuid,
  user_id uuid,
  CONSTRAINT customer_interactions_pkey PRIMARY KEY (id),
  CONSTRAINT fk_customer_interactions_user FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT customer_interactions_company_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.customer_matching_keys (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  customer_id uuid NOT NULL,
  key_type character varying NOT NULL CHECK (key_type::text = ANY (ARRAY['email'::character varying, 'phone'::character varying, 'name'::character varying]::text[])),
  key_value character varying NOT NULL,
  normalized_value character varying NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customer_matching_keys_pkey PRIMARY KEY (id),
  CONSTRAINT customer_matching_keys_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.customer_merge_log (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  source_customer_id uuid NOT NULL,
  target_customer_id uuid NOT NULL,
  merged_by_user_id uuid,
  merge_details jsonb,
  merged_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customer_merge_log_pkey PRIMARY KEY (id),
  CONSTRAINT customer_merge_log_target_customer_id_fkey FOREIGN KEY (target_customer_id) REFERENCES public.customers(id),
  CONSTRAINT customer_merge_log_merged_by_user_id_fkey FOREIGN KEY (merged_by_user_id) REFERENCES public.users(id)
);
CREATE TABLE public.customers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  customer_name character varying NOT NULL,
  customer_email character varying,
  customer_phone character varying,
  customer_address text,
  customer_notes text,
  created_by_user_id uuid NOT NULL,
  created_by_user_name character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  deleted_at timestamp with time zone,
  merged_into_customer_id uuid,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'inactive'::character varying, 'merged'::character varying, 'deleted'::character varying]::text[])),
  metadata jsonb DEFAULT '{}'::jsonb,
  lifecycle_stage character varying DEFAULT 'prospect'::character varying CHECK (lifecycle_stage::text = ANY (ARRAY['prospect'::character varying, 'lead'::character varying, 'customer'::character varying, 'churned'::character varying]::text[])),
  lifecycle_updated_at timestamp with time zone DEFAULT now(),
  tags ARRAY DEFAULT '{}'::text[],
  source character varying,
  source_campaign character varying,
  CONSTRAINT customers_pkey PRIMARY KEY (id),
  CONSTRAINT customers_company_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT customers_created_by_fkey FOREIGN KEY (created_by_user_id) REFERENCES public.users(id),
  CONSTRAINT customers_merged_into_customer_id_fkey FOREIGN KEY (merged_into_customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.demo_messages (
  id bigint NOT NULL DEFAULT nextval('demo_messages_id_seq'::regclass),
  session_id text NOT NULL,
  message_text text NOT NULL,
  sender text NOT NULL,
  tech_id text,
  created_at timestamp with time zone DEFAULT now(),
  message_source character varying DEFAULT 'make_com'::character varying,
  company_id uuid,
  CONSTRAINT demo_messages_pkey PRIMARY KEY (id),
  CONSTRAINT demo_messages_company_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.feedback (
  id bigint NOT NULL DEFAULT nextval('feedback_id_seq'::regclass),
  user_name text NOT NULL,
  feedback_text text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT feedback_pkey PRIMARY KEY (id)
);
CREATE TABLE public.invitations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  email text NOT NULL,
  role_type text NOT NULL CHECK (role_type = ANY (ARRAY['manager'::text, 'analyst'::text, 'sales'::text, 'field_tech'::text])),
  invited_by uuid NOT NULL,
  token text NOT NULL DEFAULT encode(gen_random_bytes(32), 'hex'::text) UNIQUE,
  expires_at timestamp with time zone NOT NULL DEFAULT (now() + '7 days'::interval),
  used boolean NOT NULL DEFAULT false,
  used_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT invitations_pkey PRIMARY KEY (id),
  CONSTRAINT invitations_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT invitations_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES public.users(id)
);
CREATE TABLE public.payment_webhooks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_type text NOT NULL,
  payload jsonb NOT NULL,
  company_id uuid,
  payment_id uuid,
  processed boolean DEFAULT false,
  processed_at timestamp with time zone,
  error text,
  retry_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT payment_webhooks_pkey PRIMARY KEY (id),
  CONSTRAINT payment_webhooks_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT payment_webhooks_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES public.payments(id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid,
  amount numeric NOT NULL,
  status character varying NOT NULL,
  processed_at timestamp without time zone,
  created_at timestamp without time zone DEFAULT now(),
  dwolla_customer_id character varying,
  dwolla_funding_source_id character varying,
  dwolla_transfer_id character varying,
  bank_account_name character varying,
  bank_account_last4 character varying,
  payment_type character varying DEFAULT 'monthly_subscription'::character varying,
  subscription_period_start date,
  subscription_period_end date,
  ach_status character varying,
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.service_material_categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  service_config_id uuid NOT NULL,
  category_key text NOT NULL,
  category_label text NOT NULL,
  category_description text,
  sort_order integer DEFAULT 0,
  is_required boolean DEFAULT true,
  calculation_method text NOT NULL,
  default_depth_inches numeric,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT service_material_categories_pkey PRIMARY KEY (id),
  CONSTRAINT service_material_categories_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT service_material_categories_service_config_id_fkey FOREIGN KEY (service_config_id) REFERENCES public.service_pricing_configs(id)
);
CREATE TABLE public.service_materials (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  service_config_id uuid NOT NULL,
  material_name text NOT NULL,
  material_category text NOT NULL,
  material_description text,
  supplier_name text,
  image_url text,
  image_thumbnail_url text,
  unit_type text NOT NULL,
  price_per_unit numeric NOT NULL,
  units_per_package numeric,
  coverage_per_unit numeric,
  coverage_depth_inches numeric,
  length_inches numeric,
  width_inches numeric,
  thickness_inches numeric,
  weight_lbs numeric,
  waste_factor_percentage numeric DEFAULT 10.00,
  compaction_factor_percentage numeric DEFAULT 0.00,
  is_active boolean DEFAULT true,
  is_default boolean DEFAULT false,
  material_grade text,
  color text,
  finish text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT service_materials_pkey PRIMARY KEY (id),
  CONSTRAINT service_materials_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT service_materials_service_config_id_fkey FOREIGN KEY (service_config_id) REFERENCES public.service_pricing_configs(id),
  CONSTRAINT service_materials_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT service_materials_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.users(id)
);
CREATE TABLE public.service_pricing_configs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  service_name character varying NOT NULL,
  hourly_labor_rate numeric NOT NULL DEFAULT 25.00,
  optimal_team_size integer NOT NULL DEFAULT 3,
  base_productivity numeric NOT NULL DEFAULT 50.00,
  base_material_cost numeric NOT NULL DEFAULT 5.84,
  profit_margin numeric NOT NULL DEFAULT 0.20,
  variables_config jsonb NOT NULL DEFAULT '{"formulaType": "two_tier", "categoryName": {"label": "Category Display Name", "description": "What this category controls", "variableName": {"type": "select", "label": "Variable Display Label", "default": "defaultOption", "options": {"defaultOption": {"label": "Default Option", "value": 0, "multiplier": 1.0}}, "effectType": "labor_time_percentage", "description": "How this affects the project", "calculationTier": 1}}, "formulaDescription": "Tier 1: Calculate labor hours | Tier 2: Calculate costs with complexity and profit", "serviceIntegrations": {"label": "Bundled Services", "description": "Automatically include related service calculations"}}'::jsonb,
  default_variables jsonb NOT NULL DEFAULT '{"categoryName": {"variableName": "defaultOption"}}'::jsonb,
  is_active boolean DEFAULT true,
  version character varying DEFAULT '2.0.0'::character varying,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  updated_by uuid,
  CONSTRAINT service_pricing_configs_pkey PRIMARY KEY (id),
  CONSTRAINT service_pricing_configs_company_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT service_pricing_configs_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT auth.uid(),
  company_id uuid NOT NULL,
  email character varying NOT NULL,
  role character varying NOT NULL,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  is_admin boolean DEFAULT false,
  user_icon character varying NOT NULL DEFAULT 'User'::character varying,
  name character varying NOT NULL DEFAULT 'User'::character varying,
  title character varying,
  is_developer boolean DEFAULT false,
  is_owner boolean DEFAULT false,
  is_manager boolean DEFAULT false,
  is_analyst boolean DEFAULT false,
  is_sales boolean DEFAULT false,
  is_field_tech boolean DEFAULT false,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);